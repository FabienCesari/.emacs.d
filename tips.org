* EMACS *
** Org Mode
 org-todo [[C-c C-t]]

 insert todo heading [[M-shift-RET]]

 [[ insert-link-here ]][links are between two double right brackets [[]] ]

 M + -> or M + <- for adding asteriscs.

*** TODO sync org mode and google calendar. [[http://orgmode.org/worg/org-tutorials/org-google-sync.html]]
   Open a link in org mode [[C-c C-o]]
     

** Emacs
   create a new file C-x b file.name RET and then write the file. C-x C-w file.name RET
   
*** Query replace in multiple files: 

    1/activate dired mode "C-x 4 C-d", select the directory. 
    2/select multiple files 'm' to mark files 'u' to Unmark files
    3/activate the regex mode avec "M-x dired-do-query-replace-regexp"   
    4/seek and replace like in the normal regex mode. ( C-M-Shift-% )


** Doxymacs Shortcuts  
  C-c d ? will look up documentation for the symbol under the point.
  C-c d r will rescan your Doxygen tags file.
  C-c d f will insert a Doxygen comment for the next function.
  C-c d i will insert a Doxygen comment for the current file.
  C-c d ; will insert a Doxygen comment for a member variable on the current line (like M-;).
  C-c d m will insert a blank multi-line Doxygen comment.
  C-c d s will insert a blank single-line Doxygen comment.
  C-c d @ will insert grouping comments around the current region.
  

* DEVELOPMENT *
  
** Makefile
   .PHONY target --> always build the dependencies.
 
*** construction generique du makefile. 
 toujours avoir un chemin pour les libs et les includes --> facilite l'ajout ultÃ©rieur. 
 toujours prevoir un dossier build pour le .o et un dossier lib pour les .a
 generation d'une lib Ã  partir des sources et linkage avec le main au cas ou

*** put objec files in an other directory and build a lib 

stack Overflow [[http://stackoverflow.com/questions/1814270/gcc-g-option-to-place-all-object-files-into-separate-directory]]
Stack Overflow [[http://stackoverflow.com/questions/4102469/makefile-to-put-object-files-from-source-files-different-directories-into-a-sing]]





** git
   On the git repo up to date:
   * create a new branch. and checkout to it. ( git checkout -b name_of_the_branch )
   * work on it.
   * go back to master and pull from the origin. (git checkout master + git pull ) 
   * merge the two branches. (git merge name_of_the_branch)
   * push to the origin. (git push)


* SYSTEME
** MacPorts
   see installed packages  [[port installed]]
   update [[sudo port -v selfupdat]]e --> if outdated [[sudo port upgrade outdated]]

 
